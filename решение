# 1 задача
1) найти точки, через который проходят пути между пунктами
2) найти все возможные варианты путей и посчитать их сумму
3) сложить ответы
# 3 задача
1) применить фильтры по нужным значкениям
2) посчитать и умножить(при необходимости) на нужное количество
# 4 задача
> важно помнить про прямое условие фано - код одного символа не может быть началом кода другого символа
1) посмотреть, сколько раз встречается каждая буква
2) на основе данных условия задать для буквы, повторяющейся наибольшее количество раз, код с минимальным количеством знаков
3) далее по бинарному дереву выстроить значения для других букв
- пример бинарного дерева("*"для отделения):
~~~mermaid
stateDiagram-v2
    0--> 0*
    0 --> 1
~~~

# 5 задача(программируемая)
1) в python для записи бинарного вида числа используется функция bin()
2) пишем в цикле все условия задачи
# 7 задача

1) определить используемую формулу
2) написать формулы для случаев "до" и "после"
3) определить изменение данной велимчины и получить то, что требуется

# 8 задача 
1) создать цикл по количеству знаков в числе
2) прописать условия в циклах


# 9 задача
1) обозначить выполнение 1 условия
2) обозначить остальные условия на основе 1-го
3) посчитать одновременно удовлетворяющие обоим условиям клетки

# 10 задача
1) Ctrl + F в параметрах ставим галочки "учитывать регистр" + "только слово целиком"
2) количество результатов будет показываться


# 13 задача
1) отмечаем старт единицей
2) анализировать пути по одной дороге(вохможно несколько случаев)
3) сложить суммы путей

# 19 задача
1) определить конечное значение
2) определить возможные ходы
3) рассмотреть все случаи

~~~ mermaid
stateDiagram-v2
    129 --> 65:В(*2)
    129 --> 128:В(+1)
    128 --> 64:П(*2)
    128--> 127:П(+1)
    64 --> ответ
~~~

# 20 задача
1) найти точку входа(№1 в #19)
2) рассмотреть все случаи

~~~ mermaid
stateDiagram-v2
    129 --> 65:П(*2)
    129 --> 128:П(+1)
    128 --> 64:В(*2)
    128--> 127:В(+1)
    64 --> 63:П(+1)
    64 --> 32:П(*2)
    63 --> ответ
    32 --> ответ
    127 --> 126:П(+1)
~~~

# 21 задача
1) выполнить 2 первых пункта #19
2) рассмотреть все возможные случаи
~~~mermaid
stateDiagram-v2
    129 --> 128:В(+1)
    129 --> 65:В(*2)
    128 --> 127:П(+1)
    127 --> 126:В(+1)
    128 --> 64:П(*2)
    65 --> 64:П(+1)
    64 --> 32:В(*2)
    64 --> 63:В(+1)
    63 --> 62:П(+1)
    32 --> 16:П(*2)
    32 --> 31:П(+1)
    126 --> 63*:П(*2)
    126 --> 125:П(*2)
~~~
